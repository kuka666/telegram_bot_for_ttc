from datetime import date
from email import message
from itertools import count
from re import L
import re
from time import sleep
import telebot
import math
from random import randint
import json
import asyncio


token = '5512229550:AAF9qGoRFPa3ukPqxTgbbbJb4dR_NJtAEeE'
bot = telebot.TeleBot(token)
langNumber1 = [0]
user_data = {
    'iin': '',
    'fio': '',
    'phone_number': '',
    'email': '',
    'balans': '',
    'count_deti': '',
    'dengi': 0,
    'meloman_count': 0,
    'marwin_count': 0,
    'lcwaikiki_count': 0,
    'dengi_count': 0,
    'lok': '',
    'accept': False,
    'save': False,
    'lang': ''
}

info_data = {
    'count_plus': 0,
    'count_minus': 0,
    'in_korazina': True
}



@bot.message_handler(commands=['start'])
def lang(message):
    bot.send_photo(message.from_user.id,
                   photo=open('img/ttc.jpg', 'rb'),caption="<b>–î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑!</b>",parse_mode = "HTML")
    keyboard = telebot.types.InlineKeyboardMarkup()
    callback_button1 = telebot.types.InlineKeyboardButton(
        text=listLang[0], callback_data='r')
    callback_button2 = telebot.types.InlineKeyboardButton(
        text=listLang[1], callback_data='k')
    keyboard.add(callback_button1, callback_button2)
    bot.send_message(message.from_user.id,
                     '<b>–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:\n–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:\n</b>', reply_markup=keyboard,parse_mode = "HTML")


def get_all_data(message):
    a = 0
    b = 0
    c = 0
    kuka = True
    global iin
    with open('data.json', encoding='utf-8') as file:
        stock = json.load(file)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)
    user_data['phone_number'] = message.contact.phone_number
    for smth in stock:
        if(smth['–¢–µ–ª–µ—Ñ–æ–Ω'] == user_data['phone_number']):
            iin = smth['–ò–ò–ù']
    for smth in stock:
        if smth['–ò–ò–ù'] == iin.replace(" ", ""):
            a = a + 1
    for i in data:
        if(user_data['phone_number'] == i['phone_number']):
            user_data['iin'] = i['iin']
            user_data['fio'] = i['fio']
            user_data['phone_number'] = i['phone_number']
            user_data['email'] = i['email']
            user_data['balans'] = i['balans']
            user_data['count_deti'] = i['count_deti']
            user_data['dengi'] = i['dengi']
            user_data['meloman_count'] = i['meloman_count']
            user_data['marwin_count'] = i['marwin_count']
            user_data['lcwaikiki_count'] = i['lcwaikiki_count']
            user_data['accept'] = i['accept']
            user_data['save'] = i['save']
            user_data['lang'] = i['lang']



    for smth in stock:
        if smth['–ò–ò–ù'] == iin.replace(" ", "") and user_data['save'] == False and user_data['accept'] == False: 
            if(a == 1):
                if(langNumber1[0] == 0):
                    bot.send_message(
                        message.from_user.id, smth['–§–ò–û'] + listuVas[0] + str(a) + listRebenok[0])
                    user_data['fio'] = smth['–§–ò–û']
                    user_data['email'] = smth['–ü–æ—á—Ç–∞']
                    user_data['iin'] = str(iin)
                    break
                elif(langNumber1[0] == 1):
                    bot.send_message(
                        message.from_user.id, smth['–§–ò–û'] + listuVas[1] + str(a) + listRebenok[1])
                    user_data['fio'] = smth['–§–ò–û']
                    user_data['email'] = smth['–ü–æ—á—Ç–∞']
                    user_data['iin'] = str(iin)
                    break
            elif(a > 1):
                if(langNumber1[0] == 0):
                    bot.send_message(
                        message.from_user.id, smth['–§–ò–û'] + listuVas[0] + str(a) + listRebenok[2])
                    user_data['fio'] = smth['–§–ò–û']
                    user_data['email'] = smth['–ü–æ—á—Ç–∞']
                    user_data['iin'] = str(iin)
                    break
                elif(langNumber1[0] == 1):
                    bot.send_message(
                        message.from_user.id, smth['–§–ò–û'] + listuVas[1] + str(a) + listRebenok[1])
                    user_data['fio'] = smth['–§–ò–û']
                    user_data['email'] = smth['–ü–æ—á—Ç–∞']
                    user_data['iin'] = str(iin)
                    break
    for smth in stock:
        if smth['–ò–ò–ù'] == iin.replace(" ", "") and user_data['save'] == False and user_data['accept'] == False:
            birthday = int(between_date_day(
                smth['–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –†–µ–±–µ–Ω–∫–∞'], '01.09.2022') / 365)
            if(6 <= birthday <= 17):
                bot.send_message(
                    message.from_user.id, smth['–§–ò–û –†–µ–±–µ–Ω–∫–∞'] + " " + str(birthday) + " " + listLet[langNumber1[0]])
                b = b + 1
    user_data['count_deti'] = str(b)
    for smth in stock:
        if smth['–ò–ò–ù'] == iin.replace(" ", "") and user_data['save'] == False and user_data['accept'] == False:
            kb = telebot.types.InlineKeyboardMarkup(row_width=1)
            if(langNumber1[0] == 0):
                callback_button1 = telebot.types.InlineKeyboardButton(
                    text='–î–∞', callback_data='d')
                callback_button2 = telebot.types.InlineKeyboardButton(
                    text='–ù–µ—Ç', callback_data='n')
                kb.add(callback_button1, callback_button2)
            else:
                callback_button1 = telebot.types.InlineKeyboardButton(
                    text='–ò—è', callback_data='i')
                callback_button2 = telebot.types.InlineKeyboardButton(
                    text='–ñ–æ–∫', callback_data='j')
                kb.add(callback_button1, callback_button2)
            bot.send_message(message.from_user.id,
                             list3Bank[langNumber1[0]], reply_markup=kb)
            break
    if(user_data['accept'] == True):
        get_cart(message)
    if(user_data['save'] == True):
        bot.send_message(
            message.from_user.id, listChoosed[langNumber1[0]])
        mel = user_data['meloman_count'] * 5000
        mar = user_data['marwin_count'] * 5000
        lc = user_data['lcwaikiki_count'] * 5000
        bot.send_message(message.chat.id, '–ö–æ—Ä–∑–∏–Ω–∞'+'\U0001F5D1'+'\n' +
                         listBalans[langNumber1[0]] + ':' + str(user_data['balans']) + '—Ç–≥\n' +
                         listMoney[langNumber1[0]] + ':' +
                         str(user_data['dengi']) + '—Ç–≥' +
                         '\n–ú–µ–ª–æ–º–∞–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['meloman_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(mel) +
                         '—Ç–≥\nMarwin —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['marwin_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(mar) +
                         '—Ç–≥\nLCWaikiki —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['lcwaikiki_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(lc)+'—Ç–≥')
        repeat_start(message)



def add_and_delete(message):
    price = str(user_data[user_data['lok']] * 5000) + '—Ç–≥'
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    callback_button1 = telebot.types.InlineKeyboardButton(text='‚ûï',callback_data='plus',)
    callback_button2 = telebot.types.InlineKeyboardButton(text=str(user_data[user_data['lok']]) + '—à—Ç.- ' + price,callback_data='howmany')
    callback_button3 = telebot.types.InlineKeyboardButton(text='‚ûñ',callback_data='minus')
    callback_button4 = telebot.types.InlineKeyboardButton(text='üîô –ö–∞—Ç–∞–ª–æ–≥',callback_data='enough')
    callback_button5 = telebot.types.InlineKeyboardButton(text='‚ùå',callback_data='delete_full')
    keyboard.add( callback_button2)
    keyboard.row(callback_button5,callback_button3,callback_button1)
    keyboard.add(callback_button4)
    if(user_data['lok']=='dengi_count'):
        bot.send_photo(message.chat.id,
                    photo=open('img/tenge.jpg', 'rb'),caption="<b>–î–µ–Ω—å–≥–∏</b>\n–¶–µ–Ω–∞: 5000—Ç–≥",parse_mode = "HTML", reply_markup=keyboard)
    elif(user_data['lok']=='meloman_count'):
        bot.send_photo(message.chat.id,
                    photo=open('img/marw_melo.jpg', 'rb'),caption="<b>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ú–µ–ª–æ–º–∞–Ω</b>\n–¶–µ–Ω–∞: 5000—Ç–≥",parse_mode = "HTML", reply_markup=keyboard)
    elif(user_data['lok']=='marwin_count'):
        bot.send_photo(message.chat.id,
                    photo=open('img/marw_melo.jpg', 'rb'),caption="<b>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç Marwin</b>\n–¶–µ–Ω–∞: 5000—Ç–≥",parse_mode = "HTML", reply_markup=keyboard)
    elif(user_data['lok']=='lcwaikiki_count'):
        bot.send_photo(message.chat.id,
                    photo=open('img/lcwaikiki.png', 'rb'),caption="<b>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç LCWaikiki</b>\n–¶–µ–Ω–∞: 5000—Ç–≥",parse_mode = "HTML", reply_markup=keyboard)


def get_cart(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True,row_width=1)
    callback_button2 =  telebot.types.KeyboardButton('–ö–æ—Ä–∑–∏–Ω–∞'+'\U0001F5D1')
    callback_button1 =  telebot.types.KeyboardButton('–ö–∞—Ç–∞–ª–æ–≥'+'\U0001F6D2')
    callback_button3 =  telebot.types.KeyboardButton(listChangeLang[langNumber1[0]]+'\U0001F6AA')
    keyboard.add(callback_button1, callback_button2, callback_button3)
    bot.send_message(message.chat.id, '<b>' + listCart[langNumber1[0]] +str(user_data['balans'])+'—Ç–≥</b>\n', reply_markup=keyboard,parse_mode="HTML")


def get_magazin(message):
    info_data['in_korazina'] = False
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    callback_button1 = telebot.types.InlineKeyboardButton(
        text=listMoney[langNumber1[0]]+'\U0001F4B0', callback_data='dengi')
    callback_button2 = telebot.types.InlineKeyboardButton(
        text='–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç'+'\U0001F4DC', callback_data='sertificaty')
    callback_button3 = telebot.types.InlineKeyboardButton(
        text=listBack[langNumber1[0]]+' '+'\U0001F519', callback_data='nazad')
    keyboard.add(callback_button1, callback_button2, callback_button3)
    bot.send_message(message.chat.id, '–ö–∞—Ç–∞–ª–æ–≥'+'\U0001F6D2', reply_markup=keyboard)


def get_korzina(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    callback_button1 = telebot.types.InlineKeyboardButton(
        text=listAccept[langNumber1[0]]+'\U00002705', callback_data='soglasitsya')
    callback_button2 = telebot.types.InlineKeyboardButton(
        text=listWhatDelete[langNumber1[0]]+'\U0000274C', callback_data='delete')
    callback_button3 = telebot.types.InlineKeyboardButton(
        text=listRedaktirovat[langNumber1[0]], callback_data='redaktirovat')
    callback_button4 = telebot.types.InlineKeyboardButton(
        text=listBack[langNumber1[0]]+' '+'\U0001F519', callback_data='nazad')
    keyboard.add(callback_button1, callback_button2, callback_button3, callback_button4)
    mel = user_data['meloman_count'] * 5000
    mar = user_data['marwin_count'] * 5000
    lc = user_data['lcwaikiki_count'] * 5000
    bot.send_message(message.chat.id, '–ö–æ—Ä–∑–∏–Ω–∞'+'\U0001F5D1'+'\n' +
                     listBalans[langNumber1[0]] + ':' + str(user_data['balans']) + '—Ç–≥\n\n' +
                     listMoney[langNumber1[0]] + ':' +
                         str(user_data['dengi']) + '—Ç–≥'+'\U0001F4B0'
                     '\n–ú–µ–ª–æ–º–∞–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['meloman_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(mel) +
                     '—Ç–≥\nMarwin —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['marwin_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(mar) +
                     '—Ç–≥\nLCWaikiki —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['lcwaikiki_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(lc)+'—Ç–≥', reply_markup=keyboard)



def get_delete(message):
    info_data['in_korazina'] = True
    keyboard = telebot.types.InlineKeyboardMarkup()
    callback_button1 = telebot.types.InlineKeyboardButton(
        text=listMoney[langNumber1[0]]+'\U0001F4B0', callback_data='dengi_delete')
    callback_button2 = telebot.types.InlineKeyboardButton(
        text='–ú–µ–ª–æ–º–∞–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', callback_data='mel-sertificaty')
    callback_button3 = telebot.types.InlineKeyboardButton(
        text='Marwin —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', callback_data='mar-sertificaty')
    callback_button4 = telebot.types.InlineKeyboardButton(
        text='LCWaikiki —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', callback_data='lc-sertificaty')
    callback_button5 = telebot.types.InlineKeyboardButton(
        text=listBack[langNumber1[0]]+' '+'\U0001F519', callback_data='nazad')
    keyboard.add(callback_button1, callback_button2,
                 callback_button3, callback_button4, callback_button5)
    bot.send_message(
        message.chat.id, listChoose[langNumber1[0]], reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callbackLang(call):
    b = ''
    if call.message:
        try:
            if call.data == "r" or call.data == "k":
                if call.data == "r":
                    langNumber1[0] = 0

                elif call.data == "k":
                    langNumber1[0] = 1

                # print(langNumber1[0], listLang[langNumber1[0]])
                bot.edit_message_text(
                    chat_id=call.message.chat.id, message_id=call.message.message_id, text=listLangDef[langNumber1[0]])
                bot.send_message(call.message.chat.id,
                                 listLang[langNumber1[0]])
                user_data['lang'] = listLang[langNumber1[0]]
                get_phone_number(call.message)
                bot.register_next_step_handler(call.message, get_all_data)
            elif call.data == "d" or call.data == "n" or call.data == "i" or call.data == "j":
                if call.data == 'd':
                    b = get_count()
                    user_data['balans'] = b
                    # print(user_data)
                    if(user_data['accept']==False):
                        user_data['accept'] = True
                        save_data(user_data)
                        #clear nuzhno zavtra
                    get_cart(call.message)
                elif call.data == 'n':
                    bot.send_message(call.message.chat.id,
                                     listSupport[langNumber1[0]])
                elif call.data == 'i':
                    b = get_count()
                    user_data['balans'] = b
                    # print(user_data)
                    if(user_data['accept']==False):
                        user_data['accept'] = True
                        save_data(user_data)
                    get_cart(call.message)
                elif call.data == 'j':
                    bot.send_message(call.message.chat.id,
                                     listSupport[langNumber1[0]])
            elif call.data == "korzina" or call.data == "magazin" or call.data == "vyhod":
                if call.data == 'korzina':
                    get_korzina(call.message)
                elif call.data == 'magazin':
                    get_magazin(call.message)
                elif call.data == 'vyhod':
                    user_data_clear()
                    repeat_start(call.message)
            elif call.data == "dengi" or call.data == "sertificaty" or call.data == "nazad":
                if call.data == 'dengi':
                    b = 'dengi_count'
                    user_data['lok'] = b
                    add_and_delete(call.message)

                elif call.data == 'sertificaty':
                    get_sertificat(call.message)
                elif call.data == 'nazad':
                    get_cart(call.message)
            elif call.data == "meloman" or call.data == "marwin" or call.data == "lcwaikiki":
                
                if call.data == 'meloman':
                    b = 'meloman_count'
                    user_data['lok'] = b
                    add_and_delete(call.message)
                elif call.data == 'marwin':
                    b = 'marwin_count'
                    user_data['lok'] = b
                    add_and_delete(call.message)
                elif call.data == 'lcwaikiki':
                    b = 'lcwaikiki_count'
                    user_data['lok'] = b
                    add_and_delete(call.message)
            elif call.data == "soglasitsya" or call.data == "delete" or call.data == "redaktirovat":
                if call.data == 'soglasitsya':
                    bot.send_message(call.message.chat.id,
                                     listEndAccept[langNumber1[0]])
                    bot.register_next_step_handler(
                        call.message, get_sogl)
                elif call.data == 'delete':
                    clear_cart(call.message)
                    bot.send_message(call.message.chat.id,
                                     listDeleted[langNumber1[0]])
                elif call.data == "redaktirovat":
                    get_delete(call.message)
            elif call.data == "dengi_delete" or call.data == "mel-sertificaty" or call.data == "mar-sertificaty" or call.data == "lc-sertificaty":
                if call.data == 'dengi_delete':
                    b = 'dengi_count'
                    user_data['lok'] = b
                    bot.send_message(call.message.chat.id,
                                     listReturnMoney[langNumber1[0]])
                    add_and_delete(call.message)
                elif call.data == 'mel-sertificaty':
                    b = 'meloman_count'
                    user_data['lok'] = b
                    bot.send_message(call.message.chat.id,
                                     listReturnMeloman[langNumber1[0]])
                    add_and_delete(call.message)
                elif call.data == 'mar-sertificaty':
                    b = 'marwin_count'
                    user_data['lok'] = b
                    bot.send_message(call.message.chat.id,
                                     listReturnMarwin[langNumber1[0]])
                    add_and_delete(call.message)
                elif call.data == 'lc-sertificaty':
                    b = 'lcwaikiki_count'
                    user_data['lok'] = b
                    bot.send_message(call.message.chat.id,
                                     listReturnLCWaikiki[langNumber1[0]])
                    add_and_delete(call.message)
            elif call.data == "plus" or call.data == "minus" or call.data == 'enough' or call.data == 'delete_full':
                if call.data == 'plus':
                    add_plus(call.message)
                    price = str(user_data[user_data['lok']] * 5000) + '—Ç–≥'
                    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
                    callback_button1 = telebot.types.InlineKeyboardButton(text='‚ûï',callback_data='plus',)
                    callback_button2 = telebot.types.InlineKeyboardButton(text=str(user_data[user_data['lok']]) + '—à—Ç.- ' + price,callback_data='howmany')
                    callback_button3 = telebot.types.InlineKeyboardButton(text='‚ûñ',callback_data='minus')
                    callback_button4 = telebot.types.InlineKeyboardButton(text='üîô –ö–∞—Ç–∞–ª–æ–≥',callback_data='enough')
                    callback_button5 = telebot.types.InlineKeyboardButton(text='‚ùå',callback_data='delete_full')
                    keyboard.add( callback_button2)
                    keyboard.row(callback_button5,callback_button3,callback_button1)
                    keyboard.add(callback_button4)
                    bot.edit_message_reply_markup(call.from_user.id, call.message.message_id, reply_markup=keyboard)
                    get_all_func(call.message)
                elif call.data == 'minus':
                    delete_minus(call.message)
                    price = str(user_data[user_data['lok']] * 5000) + '—Ç–≥'
                    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
                    callback_button1 = telebot.types.InlineKeyboardButton(text='‚ûï',callback_data='plus',)
                    callback_button2 = telebot.types.InlineKeyboardButton(text=str(user_data[user_data['lok']]) + '—à—Ç.- ' + price,callback_data='howmany')
                    callback_button3 = telebot.types.InlineKeyboardButton(text='‚ûñ',callback_data='minus')
                    callback_button4 = telebot.types.InlineKeyboardButton(text='üîô –ö–∞—Ç–∞–ª–æ–≥',callback_data='enough')
                    callback_button5 = telebot.types.InlineKeyboardButton(text='‚ùå',callback_data='delete_full')
                    keyboard.add( callback_button2)
                    keyboard.row(callback_button5,callback_button3,callback_button1)
                    keyboard.add(callback_button4)
                    bot.edit_message_reply_markup(call.from_user.id, call.message.message_id, reply_markup=keyboard)
                    get_all_func(call.message)
                elif call.data == 'enough':
                    if(user_data['lok']=='meloman_count'):
                        get_sertificat(call.message)
                    elif(user_data['lok']=='marwin_count'):
                        get_sertificat(call.message)
                    elif(user_data['lok']=='lcwaikiki_count'):
                        get_sertificat(call.message)
                    elif(user_data['lok']=='dengi_count'):
                        get_magazin(call.message)
                elif call.data == 'delete_full':
                    if(user_data['lok'] == 'dengi_count'):
                        user_data['dengi'] = 0
                        user_data['balans'] = int(user_data['balans']) + user_data[user_data['lok']]*5000
                        user_data[user_data['lok']] = 0
                    else:
                        user_data['balans'] = int(user_data['balans']) + user_data[user_data['lok']]*5000
                        user_data[user_data['lok']] = 0
                        
                    if(info_data['in_korazina'] == False):
                        get_magazin(call.message)
                    else:
                        get_korzina(call.message)



        except Exception as ex:
            print(ex)


def repeat_start(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    callback_button1 = telebot.types.KeyboardButton('–°—Ç–∞—Ä—Ç')
    keyboard.add(callback_button1)
    bot.send_message(
        message.chat.id, listGoodBye[langNumber1[0]]+'\U0001F44B', reply_markup=keyboard)
def get_all_func(message):
    if(user_data['lok']=='meloman_count'):
        get_meloman_sert(message)
    elif(user_data['lok']=='marwin_count'):
        get_marwin_sert(message)
    elif(user_data['lok']=='lcwaikiki_count'):
        get_lcwaikiki_sert(message)
    elif(user_data['lok']=='dengi_count'):
        get_dengi(message)

@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text == "–°—Ç–∞—Ä—Ç":
        lang(message)
    elif message.text == "–î–æ–±–∞–≤–∏—Ç—å":
        print(user_data[user_data['lok']])
        add_plus(message)
        bot.send_message(message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏:' +
                         str(user_data[user_data['lok']]))
    elif message.text == "–£–±—Ä–∞—Ç—å":
        delete_minus(message)
        bot.send_message(message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏:' +
                         str(user_data[user_data['lok']]))
    elif message.text == "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ":
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        callback_button1 = telebot.types.KeyboardButton('–ù–∞–∑–∞–¥')
        keyboard.add(callback_button1)
        bot.send_message(message.chat.id, '–ù–∞–∑–∞–¥', reply_markup=keyboard)
        if(user_data['lok']=='meloman_count'):
            get_meloman_sert(message)
        elif(user_data['lok']=='marwin_count'):
            get_marwin_sert(message)
        elif(user_data['lok']=='lcwaikiki_count'):
            get_lcwaikiki_sert(message)
    elif message.text == "–ù–∞–∑–∞–¥":
        get_cart(message)
    elif message.text == '–ö–∞—Ç–∞–ª–æ–≥'+'\U0001F6D2':
        get_magazin(message)
    elif message.text == '–ö–æ—Ä–∑–∏–Ω–∞'+'\U0001F5D1':
        get_korzina(message)






def add_plus(message):
    try:
        krange = info_data['count_plus'] * 5000 
        if(int(user_data['balans'])-krange>0):
            info_data['count_plus']=info_data['count_plus']+1
            user_data[user_data['lok']] = user_data[user_data['lok']] + 1
        else:
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–∞–Ω—Å–∞')
    except Exception as ex:
        print(ex)


def delete_minus(message):
    try:
        krange = info_data['count_minus'] * 5000
        if(user_data[user_data['lok']] > 0):
            info_data['count_minus']=info_data['count_minus']+1
            user_data[user_data['lok']] = user_data[user_data['lok']] - 1
        elif(user_data[user_data['lok']] == 0):
            bot.send_message(message.chat.id, '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –º–µ–Ω—å—à–µ –Ω—É–ª—è')
    except Exception as ex:
        print(ex)


def get_dengi(message):
    global count_plus
    global count_minus
    count_plus = info_data['count_plus']
    count_minus = info_data['count_minus']
    try:
        if((type(int(count_plus)) == int) and (type(int(count_minus)) == int) ):
            price1 = int(count_plus) * 5000
            price2 = int(count_minus) * 5000
            user_data['balans'] =str(int(user_data['balans'])+price2)
            # print(price)
            if(int(user_data['balans']) >= int(price1)):
                user_data['balans'] = str(int(user_data['balans'])-price1)
                # user_data['meloman_count'] = user_data['meloman_count'] + \
                #     int(count)
                user_data['dengi'] = user_data['dengi'] + price1-price2
                info_data['count_plus'] = 0
                info_data['count_minus'] = 0
                # print(user_data)
            else:
                print("–û—à–∏–±–∫–∞")
    except Exception as ex:
        print(ex)
        bot.send_message(message.chat.id,
                         listDontUnderstand[langNumber1[0]]+'\U0001F914')
        get_cart(message)




def add_mel(message):
    count = message.text
    if(int(user_data['meloman_count']) >= int(count)):
        price = int(count)*5000
        user_data['balans'] = str(int(user_data['balans']) + price)
        user_data['meloman_count'] = user_data['meloman_count'] - int(count)
        bot.send_message(
            message.chat.id, listSuccess[langNumber1[0]]+'\U0001F44D')
        get_korzina(message)
    else:
        bot.send_message(message.chat.id,
                         listUnSuccess[langNumber1[0]]+'\U0001F614')
        get_korzina(message)


def add_mar(message):
    count = message.text
    if(int(user_data['marwin_count']) >= int(count)):
        price = int(count)*5000
        user_data['balans'] = str(int(user_data['balans']) + price)
        user_data['marwin_count'] = user_data['marwin_count'] - int(count)
        bot.send_message(
            message.chat.id, listSuccess[langNumber1[0]]+'\U0001F44D')
        get_korzina(message)
    else:
        bot.send_message(
            message.chat.id, listUnSuccess[langNumber1[0]]+'\U0001F614')
        get_korzina(message)


def add_lcwai(message):
    count = message.text
    if(int(user_data['lcwaikiki_count']) >= int(count)):
        price = int(count)*5000
        user_data['balans'] = str(int(user_data['balans']) + price)
        user_data['lcwaikiki_count'] = user_data['lcwaikiki_count'] - \
            int(count)
        bot.send_message(
            message.chat.id, listSuccess[langNumber1[0]]+'\U0001F44D')
        get_korzina(message)
    else:
        bot.send_message(message.chat.id,
                         listUnSuccess[langNumber1[0]]+'\U0001F614')
        get_korzina(message)


def add_balans(message):
    global dengi
    dengi = message.text
    if(int(user_data['dengi']) >= int(dengi)):
        user_data['balans'] = str(int(user_data['balans']) + int(dengi))
        user_data['dengi'] = user_data['dengi'] - int(dengi)
        bot.send_message(
            message.chat.id, listSuccess[langNumber1[0]]+'\U0001F44D')
        get_korzina(message)
    else:
        bot.send_message(
            message.chat.id, listUnSuccess[langNumber1[0]]+'\U0001F614')
        get_korzina(message)


def get_sogl(message):
    global sogl
    sogl = message.text
    if(sogl.lower() == '—Å–æ–≥–ª–∞—à–∞—é—Å—å' or sogl.lower() == '–∫–µ–ª—ñ—Å–µ–º—ñ–Ω'):
        bot.send_message(
            message.chat.id, listGoodByeSuccess[langNumber1[0]]+'\U0001F44B')
        # print(user_data)
        with open('result.json', encoding='utf-8') as file:
            data = json.load(file)
        # 2. Update json object
        data.append(user_data)
        # 3. Write json file
        with open('result.json', "w", encoding='utf8') as file:
            file.write(json.dumps(data, ensure_ascii=False))
        user_data_clear()
        # print(user_data)
    else:
        bot.send_message(
            message.chat.id, listUnSuccess[langNumber1[0]]+'\U0001F614')
        get_korzina(message)


def get_meloman_sert(message):
    global count_plus
    global count_minus
    count_plus = info_data['count_plus']
    count_minus = info_data['count_minus']
    try:
        if((type(int(count_plus)) == int) and (type(int(count_minus)) == int) ):
            price1 = int(count_plus) * 5000
            price2 = int(count_minus) * 5000
            user_data['balans'] =str(int(user_data['balans'])+price2)
            # print(price)
            if(int(user_data['balans']) >= int(price1)):
                user_data['balans'] = str(int(user_data['balans'])-price1)
                # user_data['meloman_count'] = user_data['meloman_count'] + \
                #     int(count)
                info_data['count_plus'] = 0
                info_data['count_minus'] = 0
                # print(user_data)
            else:
                print("–û—à–∏–±–∫–∞")
    except Exception as ex:
        print(ex)
        get_sertificat(message)


def get_marwin_sert(message):
    global count_plus
    global count_minus
    count_plus = info_data['count_plus']
    count_minus = info_data['count_minus']
    try:
        if((type(int(count_plus)) == int) and (type(int(count_minus)) == int) ):
            price1 = int(count_plus) * 5000
            price2 = int(count_minus) * 5000
            user_data['balans'] =str(int(user_data['balans'])+price2)
            # print(price)
            if(int(user_data['balans']) >= int(price1)):
                user_data['balans'] = str(int(user_data['balans'])-price1)
                # user_data['meloman_count'] = user_data['meloman_count'] + \
                #     int(count)
                info_data['count_plus'] = 0
                info_data['count_minus'] = 0
                # print(user_data)
            else:
                print("–û—à–∏–±–∫–∞")
    except Exception as ex:
        print(ex)
        bot.send_message(message.chat.id,
                         listDontUnderstand[langNumber1[0]]+'\U0001F914')
        get_sertificat(message)

def get_lcwaikiki_sert(message):
    global count_plus
    global count_minus
    count_plus = info_data['count_plus']
    count_minus = info_data['count_minus']
    try:
        if((type(int(count_plus)) == int) and (type(int(count_minus)) == int) ):
            price1 = int(count_plus) * 5000
            price2 = int(count_minus) * 5000
            user_data['balans'] =str(int(user_data['balans'])+price2)
            # print(price)
            if(int(user_data['balans']) >= int(price1)):
                user_data['balans'] = str(int(user_data['balans'])-price1)
                # user_data['meloman_count'] = user_data['meloman_count'] + \
                #     int(count)
                info_data['count_plus'] = 0
                info_data['count_minus'] = 0
                # print(user_data)
            else:
                print("–û—à–∏–±–∫–∞")
    except Exception as ex:
        print(ex)
        bot.send_message(message.chat.id,
                         listDontUnderstand[langNumber1[0]]+'\U0001F914')
        get_sertificat(message)


def get_sertificat(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    callback_button1 = telebot.types.InlineKeyboardButton(
        text='Meloman', callback_data='meloman')
    callback_button2 = telebot.types.InlineKeyboardButton(
        text='Marwin', callback_data='marwin')
    callback_button3 = telebot.types.InlineKeyboardButton(
        text='LCWaikiki', callback_data='lcwaikiki')
    callback_button4 = telebot.types.InlineKeyboardButton(
        text=listBack[langNumber1[0]]+' '+'\U0001F519', callback_data='nazad')
    keyboard.add(callback_button1, callback_button2,
                 callback_button3, callback_button4)
    bot.send_message(
        message.chat.id, listCertificateEach[langNumber1[0]]+'\U0001F4B8', reply_markup=keyboard)


def between_date_day(from_date, to_date):
    from_date = from_date.split(".")
    to_date = to_date.split(".")
    result_date = date(int(to_date[2]), int(to_date[1]), int(
        to_date[0])) - date(int(from_date[2]), int(from_date[1]), int(from_date[0]))
    return result_date.days


def get_count():
    a = 0
    with open('data.json', encoding='utf-8') as file:
        stock = json.load(file)
    for smth in stock:
        if smth['–ò–ò–ù'] == iin:
            birthday = int(between_date_day(
                smth['–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –†–µ–±–µ–Ω–∫–∞'], '01.09.2022') / 365)
            if(6 <= birthday <= 17):
                a = a + 1
    price = a * 45000
    return price


def user_data_clear():
    user_data['iin'] = ''
    user_data['fio'] = ''
    user_data['phone_number'] = ''
    user_data['email'] = ''
    user_data['balans'] = ''
    user_data['count_deti'] = ''
    user_data['dengi'] = 0,
    user_data['meloman_count'] = 0,
    user_data['marwin_count'] = 0,
    user_data['lcwaikiki_count'] = 0,
    user_data['dengi_count'] = 0,
    user_data['lok'] = '',
    user_data['accept'] = False,
    user_data['save'] =  False,
    user_data['lang'] =  ''
    return user_data

def clear_cart(message):
    user_data['balans'] = str(int(user_data['balans']) + user_data['dengi'] + user_data['lcwaikiki_count']*5000 + user_data['meloman_count']*5000+user_data['marwin_count']*5000)
    user_data['dengi'] = 0
    user_data['meloman_count'] = 0
    user_data['marwin_count'] = 0
    user_data['lcwaikiki_count'] = 0
    user_data['dengi_count'] = 0 
    keyboard = telebot.types.InlineKeyboardMarkup()
    callback_button1 = telebot.types.InlineKeyboardButton(
        text=listAccept[langNumber1[0]]+'\U00002705', callback_data='soglasitsya')
    callback_button2 = telebot.types.InlineKeyboardButton(
        text=listWhatDelete[langNumber1[0]]+'\U0000274C', callback_data='delete')
    callback_button3 = telebot.types.InlineKeyboardButton(
        text=listRedaktirovat[langNumber1[0]], callback_data='redaktirovat')
    callback_button4 = telebot.types.InlineKeyboardButton(
        text=listBack[langNumber1[0]]+' '+'\U0001F519', callback_data='nazad')
    keyboard.add(callback_button1, callback_button2, callback_button3, callback_button4)
    mel = user_data['meloman_count'] * 5000
    mar = user_data['marwin_count'] * 5000
    lc = user_data['lcwaikiki_count'] * 5000
    bot.edit_message_text(
                    chat_id=message.chat.id, message_id=message.message_id, text='–ö–æ—Ä–∑–∏–Ω–∞'+'\U0001F5D1'+'\n' +
                     listBalans[langNumber1[0]] + ':' + str(user_data['balans']) + '—Ç–≥\n\n' +
                     listMoney[langNumber1[0]] + ':' +
                         str(user_data['dengi']) + '—Ç–≥'+'\U0001F4B0'
                     '\n–ú–µ–ª–æ–º–∞–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['meloman_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(mel) +
                     '—Ç–≥\nMarwin —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['marwin_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(mar) +
                     '—Ç–≥\nLCWaikiki —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:' + str(user_data['lcwaikiki_count']) + ' ' + listCount[langNumber1[0]] + listNaSummu[langNumber1[0]] + ' ' + str(lc)+'—Ç–≥', reply_markup=keyboard)

def save_data(user_data):
    with open('result.json', encoding='utf-8') as file:
                        data = json.load(file)
    data.append(user_data)
    with open('result.json', "w", encoding='utf8') as file:
        file.write(json.dumps(data, ensure_ascii=False))

def get_phone_number(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True) 
    button_phone = telebot.types.KeyboardButton(text=listPhone[langNumber1[0]], request_contact=True) 
    keyboard.add(button_phone) #–î–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É –∫–Ω–æ–ø–∫—É
    bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞', reply_markup=keyboard)
langNumber = langNumber1[0]
listLang = ['–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', '“ö–∞–∑–∞“õ —Ç—ñ–ª—ñ']
listLangDef = ['–í—ã –≤—ã–±—Ä–∞–ª–∏:', '–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑:']
listPhone = ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞','–¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ–Ω –∂—ñ–±–µ—Ä—É']
listIIN = ['–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –ò–ò–ù:', "–ò–ò–ù-i–∑–¥i –∂–∞–∑—ã–Ω—ã–∑:"]

listBalans = ['–í–∞—à –±–∞–ª–∞–Ω—Å', '–°i–∑–¥i–Ω –±–∞–ª–∞–Ω—Å—ã–Ω—ã–∑', ]
listuVas = [' —É –≤–∞—Å ', ' —Å—ñ–∑–¥–µ ']
listRebenok = [' —Ä–µ–±–µ–Ω–æ–∫\n–†–µ–±–µ–Ω–∫—É –¥–∞–µ—Ç—Å—è –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç 6 –¥–æ 17 –ª–µ—Ç!!!',
               ' –±–∞–ª–∞“£—ã–∑ –±–∞—Ä\n–ë–∞–ª–∞“ì–∞ 6 –∂–∞—Å—Ç–∞–Ω –±–∞—Å—Ç–∞–ø 17 –∂–∞—Å“õ–∞ –¥–µ–π—ñ–Ω –ø–æ–¥–∞—Ä–æ–∫ –±–µ—Ä—ñ–ª–µ–¥—ñ !!!', ' –¥–µ—Ç–µ–π\n–†–µ–±–µ–Ω–∫—É –¥–∞–µ—Ç—Å—è –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç 6 –¥–æ 17 –ª–µ—Ç!!!']
list3Bank = ['–°–æ–≥–ª–∞—Å–Ω—ã –ª–∏ –≤—ã? ', '–ö–µ–ªi—Å–µci–∑ –±–µ?']

listSupport = ['–ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞–Ω—ã –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ –Ω–æ–º–µ—Ä—É: 87077012916',
               '–ï–≥–µ—Ä —Åi–∑ –∫–µ–ªi—Å–ø–µ—Å–µ–Ωi–∑ –º—ã–Ω–∞ –Ω–æ–ºi—Ä–≥–µ –∫–æ–Ω—ã—Ä–∞—É —à–∞–ª—ã–Ω—ã–∑:87077012916']
listLet = ['–ª–µ—Ç', '–∂–∞—Å—Ç–∞']
listVyhod = ['–í—ã—Ö–æ–¥', '–®—ã“ì—É']
listCart = ['–ú–µ–Ω—é:\n–í–∞—à –±–∞–ª–∞–Ω—Å: ', '–ú”ô–∑—ñ—Ä:\n–°—ñ–∑–¥—ñ“£ –±–∞–ª–∞–Ω—Å—ã“£—ã–∑: ']
listMoney = ['–î–µ–Ω—å–≥–∏', '–ê“õ—à–∞']
listBack = ['–ù–∞–∑–∞–¥', '–ê—Ä—Ç“õ–∞']
listAccept = ['–°–æ–≥–ª–∞—Å–∏—Ç—Å—è', '–ö–µ–ª—ñ—Å—É']
listDeleteTovar = ['–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', '–¢–∞—É–∞—Ä–¥—ã –∞–ª—ã–ø —Ç–∞—Å—Ç–∞—É']
listCount = ['—à—Ç—É–∫', '–¥–∞–Ω–∞']
listNaSummu = [', –Ω–∞ —Å—É–º–º—É:', ', —Å–æ–º–∞–¥–∞:']
listChoose = ['–í—ã–±–µ—Ä–∏—Ç–µ', '–¢–∞“£–¥–∞“£—ã–∑']
listGoodBye = ['–°–ø–∞—Å–∏–±–æ! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!', '–†–∞—Ö–º–µ—Ç! “ö–æ—à —Å–∞—É –±–æ–ª—ã“£—ã–∑!']
listVyvesti = ['1 —à—Ç—É–∫ = 5000—Ç–≥\n–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:',
               '1 —à—Ç—É–∫ = 5000—Ç–≥\n–ù–°–∞–Ω—ã–Ω –∂–∞–∑—ã–Ω—ã–∑:']
listCertificate = ['1 –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç = 5000—Ç–≥\n–î–æ–±–∞–≤–ª—è–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ —à—Ç—É–∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —Ö–æ—Ç–∏—Ç–µ:',
                   '1 –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç = 5000—Ç–≥\n“ö–∞–Ω—à–∞ –¥–∞–Ω–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∞–ª“ì—ã“£—ã–∑ –∫–µ–ª–µ—Ç—ñ–Ω—ñ–Ω —Ç–∞–Ω–¥–∞–Ω—ã–∑:']
listEndAccept = ['–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω–Ω—ã —Å–≤–æ–µ–º –≤—ã–±–æ—Ä–µ –Ω–∞–ø–∏—à–∏—Ç–µ: –°–æ–≥–ª–∞—à–∞—é—Å—å',
                 '–ï–≥–µ—Ä —Å—ñ–∑ ”©–∑ —Ç–∞“£–¥–∞—É—ã“£—ã–∑“ì–∞ —Å–µ–Ω—ñ–º–¥—ñ –±–æ–ª—Å–∞“£—ã–∑, –∂–∞–∑—ã“£—ã–∑: –ö–µ–ª—ñ—Å–µ–º—ñ–Ω']
listWhatDelete = ['–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É', '–ö–æ—Ä–∑–∏–Ω–∞–Ω—ã —Ç–∞–∑–∞–ª–∞—É']
listReturnMoney = ['1 —à—Ç—É–∫ = 5000—Ç–≥\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —à—Ç—É–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å:',
                   '1 —à—Ç—É–∫ = 5000—Ç–≥\n–ë–∞–ª–∞–Ω—Å“õ–∞ “õ–∞–Ω—à–∞ —à—Ç—É–∫ “õ–∞–π—Ç–∞—Ä“ì—ã“£—ã–∑ –∫–µ–ª–µ—Ç—ñ–Ω—ñ–Ω –∂–∞–∑—ã“£—ã–∑:']
listReturnMeloman = ['1 —à—Ç—É–∫ = 5000—Ç–≥\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ú–µ–ª–æ–º–∞–Ω–∞ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å:',
                     '1 —à—Ç—É–∫ = 5000—Ç–≥\n“ö–∞–Ω—à–∞ –¥–∞–Ω–∞ –ú–µ–ª–æ–º–∞–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã–Ω “õ–∞–π—Ç–∞—Ä“ì—ã“£—ã–∑ –∫–µ–ª–µ—Ç—ñ–Ω—ñ–Ω –∂–∞–∑—ã“£—ã–∑:']
listReturnMarwin = ['1 —à—Ç—É–∫ = 5000—Ç–≥\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ Marwin —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å:',
                    '1 —à—Ç—É–∫ = 5000—Ç–≥\n“ö–∞–Ω—à–∞ –¥–∞–Ω–∞ Marwin —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã–Ω “õ–∞–π—Ç–∞—Ä“ì—ã“£—ã–∑ –∫–µ–ª–µ—Ç—ñ–Ω—ñ–Ω –∂–∞–∑—ã“£—ã–∑:']
listReturnLCWaikiki = ['1 —à—Ç—É–∫ = 5000—Ç–≥\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ LCWaikiki —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å:',
                       '1 —à—Ç—É–∫ = 5000—Ç–≥\n“ö–∞–Ω—à–∞ –¥–∞–Ω–∞ LCWaikiki —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã–Ω “õ–∞–π—Ç–∞—Ä“ì—ã“£—ã–∑ –∫–µ–ª–µ—Ç—ñ–Ω—ñ–Ω –∂–∞–∑—ã“£—ã–∑:']
listSuccess = ['–£—Å–ø–µ—à–Ω–æ', '–°”ô—Ç—Ç—ñ']
listNotEnough = ['–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', '“ö–∞—Ä–∞–∂–∞—Ç –∂–µ—Ç–∫—ñ–ª—ñ–∫—Å—ñ–∑']
listUnSuccess = ['–ù–µ —É–¥–∞–ª–æ—Å—å!', '–°”ô—Ç—Å—ñ–∑!']
listGoodByeSuccess = ['–£—Å–ø–µ—à–Ω–æ! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!', '–°”ô—Ç—Ç—ñ! “ö–æ—à —Å–∞—É –±–æ–ª—ã“£—ã–∑!']
listDontUnderstand = ['–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª –Ω–∞–ø–∏—à–∏—Ç–µ –µ—â–µ —Ä–∞–∑',
                      '–ú–µ–Ω —Å—ñ–∑–¥—ñ —Ç“Ø—Å—ñ–Ω–±–µ–¥—ñ–º “õ–∞–π—Ç–∞ –∂–∞–∑—ã“£—ã–∑']
cerKz = '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—Ç–∞—Ä\n–ë—ñ—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—Ç—ã–Ω “õ“±–Ω—ã ' + '5000' + '—Ç–≥'
cerRu = '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã\n–û–¥–∏–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å—Ç–æ–∏—Ç ' + '5000' + '—Ç–≥'
listCertificateEach = [cerRu, cerKz]
listUndefinedIIN = ['–ù–µ –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–π –ò–ò–ù', '–ú“±–Ω–¥–∞–π –ò–ò–ù —Ç–∞–±—ã–ª–º–∞–¥—ã']
listChoosed = ['–í—ã —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ –≤—ã–±–æ—Ä', '–°—ñ–∑ —Ç–∞“£–¥–∞—É –∂–∞—Å–∞–¥—ã“£—ã–∑']
listRedaktirovat = ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã', '”®–Ω—ñ–º–¥–µ—Ä–¥—ñ ”©“£–¥–µ—É']
listDeleted=['–û—á–∏—Å—Ç–∏–ª–∏ –∫–æ—Ä–∑–∏–Ω—É','–°–µ–±–µ—Ç—Ç—ñ —Ç–∞–∑–∞–ª–∞–Ω–¥—ã']
listChangeLang = ['–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫','–¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É']
bot.infinity_polling(timeout=10, long_polling_timeout = 5)
